{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luren\\\\Documents\\\\GitHub\\\\netflix-clone-diy\\\\src\\\\screens\\\\PlanScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport db from '../firebase';\nimport './PlanScreen.css';\nimport { getFirestore, collection, query, where, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlanScreen() {\n  _s();\n\n  const [products, setProduct] = useState([]);\n  useEffect(() => {\n    const q = query(collection(db, 'products'), where('active', '==', true));\n    const querySnapshot = getDocs(q);\n    querySnapshot.forEach(async productDoc => {\n      const products = {}; // doc.data() is never undefined for query doc snapshots\n\n      products[productDoc.id] = productDoc.data();\n      const priceSnap = await productDoc.ref.collection('prices').get();\n      priceSnap.docs.forEach(price => {\n        products[productDoc.id].prices = {\n          priceId: price.id,\n          priceData: price.data()\n        };\n      });\n    }); // db.collections('products')\n    // .where('active','==',true)\n    // .get().then(querySnapshot => {\n    //     const products = {};\n    //     querySnapshot.forEach(async productDoc =>{\n    //         products[productDoc.id] = productDoc.data()\n    //         const priceSnap = await productDoc.ref.collection('prices')\n    //         .get();\n    //         priceSnap.docs.forEach(price => {\n    //             products[productDoc.id].prices = {\n    //                 priceId:price.id,\n    //                 priceData:price.data()\n    //             }\n    //         })\n    //     })\n    // });\n\n    setProduct(products);\n  }, []);\n  console.log(products);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planScreen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlanScreen, \"Y+RT6ATlr+FaIPWGZAxBB5LG9e0=\");\n\n_c = PlanScreen;\nexport default PlanScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlanScreen\");","map":{"version":3,"sources":["C:/Users/luren/Documents/GitHub/netflix-clone-diy/src/screens/PlanScreen.js"],"names":["React","useState","useEffect","db","getFirestore","collection","query","where","getDocs","PlanScreen","products","setProduct","q","querySnapshot","forEach","productDoc","id","data","priceSnap","ref","get","docs","price","prices","priceId","priceData","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAuC,OAAvC;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,OAAO,kBAAP;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,KAAnC,EAA0CC,KAA1C,EAAiDC,OAAjD,QAAgE,oBAAhE;;;AAMA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBV,QAAQ,CAAC,EAAD,CAAvC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMU,CAAC,GAAGN,KAAK,CAACD,UAAU,CAACF,EAAD,EAAK,UAAL,CAAX,EAA6BI,KAAK,CAAC,QAAD,EAAU,IAAV,EAAe,IAAf,CAAlC,CAAf;AAEA,UAAMM,aAAa,GAAIL,OAAO,CAACI,CAAD,CAA9B;AACAC,IAAAA,aAAa,CAACC,OAAd,CAAsB,MAAMC,UAAN,IAAoB;AACtC,YAAML,QAAQ,GAAG,EAAjB,CADsC,CAEtC;;AACAA,MAAAA,QAAQ,CAACK,UAAU,CAACC,EAAZ,CAAR,GAA0BD,UAAU,CAACE,IAAX,EAA1B;AACA,YAAMC,SAAS,GAAG,MAAMH,UAAU,CAACI,GAAX,CAAed,UAAf,CAA0B,QAA1B,EAAoCe,GAApC,EAAxB;AACAF,MAAAA,SAAS,CAACG,IAAV,CAAeP,OAAf,CAAuBQ,KAAK,IAAI;AAC5BZ,QAAAA,QAAQ,CAACK,UAAU,CAACC,EAAZ,CAAR,CAAwBO,MAAxB,GAAiC;AAC7BC,UAAAA,OAAO,EAACF,KAAK,CAACN,EADe;AAE7BS,UAAAA,SAAS,EAACH,KAAK,CAACL,IAAN;AAFmB,SAAjC;AAIH,OALD;AAMH,KAXD,EALY,CAiBZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAN,IAAAA,UAAU,CAACD,QAAD,CAAV;AACH,GAlCQ,EAkCN,EAlCM,CAAT;AAoCAgB,EAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA9CQD,U;;KAAAA,U;AAgDT,eAAeA,UAAf","sourcesContent":["import React,{useState, useEffect}from 'react'\r\nimport db from '../firebase';\r\nimport './PlanScreen.css';\r\nimport { getFirestore, collection, query, where, getDocs } from \"firebase/firestore\";\r\n\r\n\r\n\r\n\r\n\r\nfunction PlanScreen() {\r\n    const [products, setProduct] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        const q = query(collection(db, 'products'), where('active','==',true));\r\n\r\n        const querySnapshot =  getDocs(q);\r\n        querySnapshot.forEach(async productDoc => {\r\n            const products = {};\r\n            // doc.data() is never undefined for query doc snapshots\r\n            products[productDoc.id] = productDoc.data()\r\n            const priceSnap = await productDoc.ref.collection('prices').get();\r\n            priceSnap.docs.forEach(price => {\r\n                products[productDoc.id].prices = {\r\n                    priceId:price.id,\r\n                    priceData:price.data()\r\n                }\r\n            })\r\n        });\r\n        // db.collections('products')\r\n        // .where('active','==',true)\r\n        // .get().then(querySnapshot => {\r\n        //     const products = {};\r\n        //     querySnapshot.forEach(async productDoc =>{\r\n        //         products[productDoc.id] = productDoc.data()\r\n        //         const priceSnap = await productDoc.ref.collection('prices')\r\n        //         .get();\r\n        //         priceSnap.docs.forEach(price => {\r\n        //             products[productDoc.id].prices = {\r\n        //                 priceId:price.id,\r\n        //                 priceData:price.data()\r\n        //             }\r\n        //         })\r\n        //     })\r\n        // });\r\n        setProduct(products);\r\n    }, []);\r\n\r\n    console.log(products)\r\n\r\n    return (\r\n        <div className =\"planScreen\">\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlanScreen\r\n"]},"metadata":{},"sourceType":"module"}
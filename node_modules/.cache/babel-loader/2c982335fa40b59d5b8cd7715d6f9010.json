{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';var initialState={user:null};// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport var userSlice=createSlice({name:'user',initialState:initialState,// The `reducers` field lets us define reducers and generate associated actions\nreducers:{login:function login(state,action){state.user=action.payload;},logout:function logout(state){state.user=null;}}// The `extraReducers` field lets the slice handle actions defined elsewhere,\n// including actions generated by createAsyncThunk or in other slices.\n});var _userSlice$actions=userSlice.actions,login=_userSlice$actions.login,logout=_userSlice$actions.logout;export{login,logout};export var selectUser=function selectUser(state){return state.user.user;};export default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/luren/Documents/GitHub/netflix-clone-diy/src/features/userSlice.js"],"names":["createSlice","initialState","user","userSlice","name","reducers","login","state","action","payload","logout","actions","selectUser","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAE,IADa,CAArB,CAIA;AACA;AACA;AACA;AACA;AAEA,MAAO,IAAMC,CAAAA,SAAS,CAAGH,WAAW,CAAC,CACnCI,IAAI,CAAE,MAD6B,CAEnCH,YAAY,CAAZA,YAFmC,CAGnC;AACAI,QAAQ,CAAE,CACRC,KAAK,CAAE,eAACC,KAAD,CAAQC,MAAR,CAAmB,CACxBD,KAAK,CAACL,IAAN,CAAaM,MAAM,CAACC,OAApB,CACD,CAHO,CAIRC,MAAM,CAAE,gBAACH,KAAD,CAAW,CACjBA,KAAK,CAACL,IAAN,CAAa,IAAb,CACD,CANO,CAQV;AACA;AAbmC,CAAD,CAA7B,CAiBA,uBAA0BC,SAAS,CAACQ,OAApC,CAAQL,KAAR,oBAAQA,KAAR,CAAeI,MAAf,oBAAeA,MAAf,C,qBAEP,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACL,KAAD,QAAWA,CAAAA,KAAK,CAACL,IAAN,CAAWA,IAAtB,EAAnB,CAEP,cAAeC,CAAAA,SAAS,CAACU,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  user: null\r\n};\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched. Thunks are\r\n// typically used to make async requests.\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload\r\n    },\r\n    logout: (state) => {\r\n      state.user = null\r\n    }\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n});\r\n\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}
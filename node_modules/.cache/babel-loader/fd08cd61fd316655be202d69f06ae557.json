{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luren\\\\Documents\\\\GitHub\\\\netflix-clone-diy\\\\src\\\\screens\\\\PlanScreen.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport db from '../firebase';\nimport './PlanScreen.css';\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlanScreen() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [products, setProduct] = useState([]);\n\n  function useEffectAsync(effect, inputs) {\n    _s();\n\n    useEffect(() => {\n      effect();\n    }, inputs);\n  }\n\n  _s(useEffectAsync, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  useEffectAsync(async () => {\n    const q = query(collection(db, 'products'), where('active', '==', true));\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach(async productDoc => {\n      const products = {};\n      products[productDoc.id] = productDoc.data();\n      const priceSnap = await productDoc.ref.collection('prices').get();\n      priceSnap.docs.forEach(price => {\n        products[productDoc.id].prices = {\n          priceId: price.id,\n          priceData: price.data()\n        };\n      });\n    });\n    setProduct(products);\n  }, []);\n  console.log(products);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planScreen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(PlanScreen, \"KgWDS65Vh3DSgtfcJ7M3D1MjZwM=\", false, function () {\n  return [useEffectAsync];\n});\n\n_c = PlanScreen;\nexport default PlanScreen; // db.collections('products')\n// .where('active','==',true)\n// .get().then(querySnapshot => {\n//     const products = {};\n//     querySnapshot.forEach(async productDoc =>{\n//         products[productDoc.id] = productDoc.data()\n//         const priceSnap = await productDoc.ref.collection('prices')\n//         .get();\n//         priceSnap.docs.forEach(price => {\n//             products[productDoc.id].prices = {\n//                 priceId:price.id,\n//                 priceData:price.data()\n//             }\n//         })\n//     })\n// });\n\nvar _c;\n\n$RefreshReg$(_c, \"PlanScreen\");","map":{"version":3,"sources":["C:/Users/luren/Documents/GitHub/netflix-clone-diy/src/screens/PlanScreen.js"],"names":["React","useState","useEffect","db","collection","query","where","getDocs","PlanScreen","products","setProduct","useEffectAsync","effect","inputs","q","querySnapshot","forEach","productDoc","id","data","priceSnap","ref","get","docs","price","prices","priceId","priceData","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAuC,OAAvC;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,OAAO,kBAAP;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,OAAnC,QAAkD,oBAAlD;;;AAMA,SAASC,UAAT,GAAsB;AAAA;;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBT,QAAQ,CAAC,EAAD,CAAvC;;AAEC,WAASU,cAAT,CAAwBC,MAAxB,EAAgCC,MAAhC,EAAwC;AAAA;;AACrCX,IAAAA,SAAS,CAAC,MAAM;AACZU,MAAAA,MAAM;AACT,KAFQ,EAENC,MAFM,CAAT;AAGH;;AAPiB,KAGRF,cAHQ;;AASlBA,EAAAA,cAAc,CAAC,YAAa;AAExB,UAAMG,CAAC,GAAGT,KAAK,CAACD,UAAU,CAACD,EAAD,EAAK,UAAL,CAAX,EAA6BG,KAAK,CAAC,QAAD,EAAU,IAAV,EAAe,IAAf,CAAlC,CAAf;AAEA,UAAMS,aAAa,GAAG,MAAMR,OAAO,CAACO,CAAD,CAAnC;AACAC,IAAAA,aAAa,CAACC,OAAd,CAAsB,MAAMC,UAAN,IAAoB;AACtC,YAAMR,QAAQ,GAAG,EAAjB;AACAA,MAAAA,QAAQ,CAACQ,UAAU,CAACC,EAAZ,CAAR,GAA0BD,UAAU,CAACE,IAAX,EAA1B;AACA,YAAMC,SAAS,GAAG,MAAMH,UAAU,CAACI,GAAX,CAAejB,UAAf,CAA0B,QAA1B,EAAoCkB,GAApC,EAAxB;AACAF,MAAAA,SAAS,CAACG,IAAV,CAAeP,OAAf,CAAuBQ,KAAK,IAAI;AAC5Bf,QAAAA,QAAQ,CAACQ,UAAU,CAACC,EAAZ,CAAR,CAAwBO,MAAxB,GAAiC;AAC7BC,UAAAA,OAAO,EAACF,KAAK,CAACN,EADe;AAE7BS,UAAAA,SAAS,EAACH,KAAK,CAACL,IAAN;AAFmB,SAAjC;AAIH,OALD;AAMH,KAVD;AAWAT,IAAAA,UAAU,CAACD,QAAD,CAAV;AAGH,GAnBa,EAmBX,EAnBW,CAAd;AAqBAmB,EAAAA,OAAO,CAACC,GAAR,CAAYpB,QAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IArCQD,U;UASLG,c;;;KATKH,U;AAuCT,eAAeA,UAAf,C,CACQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React,{useState, useEffect}from 'react'\r\nimport db from '../firebase';\r\nimport './PlanScreen.css';\r\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\r\n\r\n\r\n\r\n\r\n\r\nfunction PlanScreen() {\r\n    const [products, setProduct] = useState([])\r\n\r\n     function useEffectAsync(effect, inputs) {\r\n        useEffect(() => {\r\n            effect();\r\n        }, inputs);\r\n    }\r\n\r\n    useEffectAsync(async () =>  {\r\n\r\n        const q = query(collection(db, 'products'), where('active','==',true));\r\n\r\n        const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach(async productDoc => {\r\n            const products = {};\r\n            products[productDoc.id] = productDoc.data()\r\n            const priceSnap = await productDoc.ref.collection('prices').get();\r\n            priceSnap.docs.forEach(price => {\r\n                products[productDoc.id].prices = {\r\n                    priceId:price.id,\r\n                    priceData:price.data()\r\n                }\r\n            })\r\n        });\r\n        setProduct(products);\r\n\r\n        \r\n    }, []);\r\n\r\n    console.log(products)\r\n\r\n    return (\r\n        <div className =\"planScreen\">\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlanScreen\r\n        // db.collections('products')\r\n        // .where('active','==',true)\r\n        // .get().then(querySnapshot => {\r\n        //     const products = {};\r\n        //     querySnapshot.forEach(async productDoc =>{\r\n        //         products[productDoc.id] = productDoc.data()\r\n        //         const priceSnap = await productDoc.ref.collection('prices')\r\n        //         .get();\r\n        //         priceSnap.docs.forEach(price => {\r\n        //             products[productDoc.id].prices = {\r\n        //                 priceId:price.id,\r\n        //                 priceData:price.data()\r\n        //             }\r\n        //         })\r\n        //     })\r\n        // });"]},"metadata":{},"sourceType":"module"}
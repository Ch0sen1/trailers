{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luren\\\\Documents\\\\GitHub\\\\netflix-clone-diy\\\\src\\\\screens\\\\PlanScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport db from '../firebase';\nimport './PlanScreen.css';\nimport { collection, query, where, getDocs, onSnapshot } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlanScreen() {\n  _s();\n\n  const [products, setProducts] = useState([]); // useEffect(() => {\n  //     const q = query(collection(db, \"products\"), where(\"active\", \"==\", true));\n  //     // console.log(db.collection(\"products\").getDocuments());\n  //     const unsub = onSnapshot(q, (querySnapshot) => {\n  //       const products = {};\n  //       querySnapshot.forEach(async (productDoc) => {\n  //         products[productDoc.id] = await productDoc.data();\n  //         console.log(await productDoc, \"ref\");\n  //         const priceSnap = await productDoc.ref.collection(\"prices\").get();\n  //         priceSnap.doc.forEach((price) => {\n  //           products[productDoc.id].price = {\n  //             priceId: price.id,\n  //             priceData: price.data(),\n  //           };\n  //         });\n  //       });\n  //       setProducts(products);\n  //     });\n  //   }, []);\n  // function useEffectAsync(effect, inputs) {\n  //     useEffect(() => {\n  //         effect();\n  //     }, inputs);\n  // }\n  // useEffectAsync(async () =>  {\n  //     const q = query(collection(db, 'products'), where('active','==',true));\n  //     const querySnapshot = await getDocs(q);\n  //     querySnapshot.forEach(async productDoc => {\n  //         const products = {};\n  //         products[productDoc.id] = productDoc.data()\n  //         const priceSnap = await getDocs(collection(productDoc.ref, \"prices\"));\n  //         priceSnap.docs.forEach(price => {\n  //             products[productDoc.id].prices = {\n  //                 priceId:price.id,\n  //                 priceData:price.data()\n  //             }\n  //         })\n  //     });\n  //     setProduct(products);\n  // }, []);\n\n  console.log(products);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planScreen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlanScreen, \"/ZAmBmUKriWz3XDcp0xu079Wyow=\");\n\n_c = PlanScreen;\nexport default PlanScreen; // db.collections('products')\n// .where('active','==',true)\n// .get().then(querySnapshot => {\n//     const products = {};\n//     querySnapshot.forEach(async productDoc =>{\n//         products[productDoc.id] = productDoc.data()\n//         const priceSnap = await productDoc.ref.collection('prices')\n//         .get();\n//         priceSnap.docs.forEach(price => {\n//             products[productDoc.id].prices = {\n//                 priceId:price.id,\n//                 priceData:price.data()\n//             }\n//         })\n//     })\n// });\n\nvar _c;\n\n$RefreshReg$(_c, \"PlanScreen\");","map":{"version":3,"sources":["C:/Users/luren/Documents/GitHub/netflix-clone-diy/src/screens/PlanScreen.js"],"names":["React","useState","useEffect","db","collection","query","where","getDocs","onSnapshot","PlanScreen","products","setProducts","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAuC,OAAvC;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,OAAO,kBAAP;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,OAAnC,EAA4CC,UAA5C,QAA8D,oBAA9D;;;AAMA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC,CADkB,CAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA1DQD,U;;KAAAA,U;AA4DT,eAAeA,UAAf,C,CACQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React,{useState, useEffect}from 'react'\r\nimport db from '../firebase';\r\nimport './PlanScreen.css';\r\nimport { collection, query, where, getDocs, onSnapshot } from \"firebase/firestore\";\r\n\r\n\r\n\r\n\r\n\r\nfunction PlanScreen() {\r\n    const [products, setProducts] = useState([])\r\n\r\n    // useEffect(() => {\r\n    //     const q = query(collection(db, \"products\"), where(\"active\", \"==\", true));\r\n    //     // console.log(db.collection(\"products\").getDocuments());\r\n    //     const unsub = onSnapshot(q, (querySnapshot) => {\r\n    //       const products = {};\r\n    //       querySnapshot.forEach(async (productDoc) => {\r\n    //         products[productDoc.id] = await productDoc.data();\r\n    //         console.log(await productDoc, \"ref\");\r\n      \r\n    //         const priceSnap = await productDoc.ref.collection(\"prices\").get();\r\n    //         priceSnap.doc.forEach((price) => {\r\n    //           products[productDoc.id].price = {\r\n    //             priceId: price.id,\r\n    //             priceData: price.data(),\r\n    //           };\r\n    //         });\r\n    //       });\r\n    //       setProducts(products);\r\n    //     });\r\n    //   }, []);\r\n\r\n    // function useEffectAsync(effect, inputs) {\r\n    //     useEffect(() => {\r\n    //         effect();\r\n    //     }, inputs);\r\n    // }\r\n\r\n    // useEffectAsync(async () =>  {\r\n\r\n    //     const q = query(collection(db, 'products'), where('active','==',true));\r\n\r\n    //     const querySnapshot = await getDocs(q);\r\n    //     querySnapshot.forEach(async productDoc => {\r\n    //         const products = {};\r\n    //         products[productDoc.id] = productDoc.data()\r\n    //         const priceSnap = await getDocs(collection(productDoc.ref, \"prices\"));\r\n    //         priceSnap.docs.forEach(price => {\r\n    //             products[productDoc.id].prices = {\r\n    //                 priceId:price.id,\r\n    //                 priceData:price.data()\r\n    //             }\r\n    //         })\r\n    //     });\r\n    //     setProduct(products);\r\n\r\n        \r\n    // }, []);\r\n\r\n    console.log(products)\r\n\r\n    return (\r\n        <div className =\"planScreen\">\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlanScreen\r\n        // db.collections('products')\r\n        // .where('active','==',true)\r\n        // .get().then(querySnapshot => {\r\n        //     const products = {};\r\n        //     querySnapshot.forEach(async productDoc =>{\r\n        //         products[productDoc.id] = productDoc.data()\r\n        //         const priceSnap = await productDoc.ref.collection('prices')\r\n        //         .get();\r\n        //         priceSnap.docs.forEach(price => {\r\n        //             products[productDoc.id].prices = {\r\n        //                 priceId:price.id,\r\n        //                 priceData:price.data()\r\n        //             }\r\n        //         })\r\n        //     })\r\n        // });"]},"metadata":{},"sourceType":"module"}